import { shikiToMonaco } from '@shikijs/monaco/index.mjs';
import { useEffect } from 'react';
import { createHighlighter } from 'shiki/index.mjs';
import shiki_halcyon from '../../styles/themes/shiki-halcyon';

import * as monaco from 'monaco-editor-core'
import editorWorker from 'monaco-editor/esm/vs/editor/editor.worker?worker'
import jsonWorker from 'monaco-editor/esm/vs/language/json/json.worker?worker'
import cssWorker from 'monaco-editor/esm/vs/language/css/css.worker?worker'
import htmlWorker from 'monaco-editor/esm/vs/language/html/html.worker?worker'
import tsWorker from 'monaco-editor/esm/vs/language/typescript/ts.worker?worker'

self.MonacoEnvironment = {
  getWorker(_, label) {
    if (label === 'json') {
      return new jsonWorker()
    }
    if (label === 'css' || label === 'scss' || label === 'less') {
      return new cssWorker()
    }
    if (label === 'html' || label === 'handlebars' || label === 'razor') {
      return new htmlWorker()
    }
    if (label === 'typescript' || label === 'javascript') {
      return new tsWorker()
    }
    return new editorWorker()
  }
}

export default function YAMLEditorClient({handleChange}: {handleChange: any}) {
    useEffect(() => {
        const highlighter = createHighlighter({
            themes: [shiki_halcyon],
            langs: [
                'yaml'
            ],
        })

        Promise.all([highlighter]).then(([highlighter]) => {
            monaco.languages.register({ id: 'yaml' })
            shikiToMonaco(highlighter, monaco)

        })
        const YAMLEditor = monaco.editor.create(document.getElementById("yamlEditor")!, {
            
            value: "some_var: 123",
            language: "yaml",
        });

        YAMLEditor.onDidChangeModelContent( (e) => {
            handleChange(e)
        });

    })
    return (
        <div id="yamlEditor" style={{ height: "30vh", width: "90%" }}></div>
    )
}